	if (((param_axle_weight == 0 && param_realism == 0) && railtype_available("RAIL")) && loading_stage == LOADING_STAGE_RESERVE) {
		//-- Standard Gauge, Future-Proofed Tracks
		// "RAIL"
		item(FEAT_RAILTYPES, railtype_1432mmTO1435mm_infinite_infinite_selfpower) {
			property {
				label:							"RAIL";
				name:							string(STR_RAILTYPE_NAME_RAIL_2004);
			//---
			//	railtype_flags:					bitmask(RAILTYPE_FLAG_HIDDEN);
			}
		}
	}

 /* REALISM MODE VERSION */
 // This would preferrably be emulated while accomodating the use of Wallclock Mode with the proper settings (1440 minutes per year) as "realism mode" is designed for the "Long Haul" GRF-heavy multiplayer server.
 // All this "realism" is entirely optional, feel free to remove or change the values as you find is most fitting of your creation! That said, having a parameter to support this would be nice! ^_^
 //-----
 // Costs are meant to be played with inflation OFF and Wallclock mode set to 1440 minutes per year, equivalent to 90 irl seconds per 6 in-game hours or 4 irl minutes per in-game day.
 // As the default railtype's standardized equivalent, SAAN is the "anchor" by which the "realistic" values are judged by, though minimum cost is also determined by maintenance for SAcN (1 bread loaves per realday-gameyear), SAbN (2 bread loaves per nearrealweek-gameyear) and SAaN (3 bread loaves per nearrealweek-gameyear). Ideally there would be smaller increments, but sadly there is not, so the minimum cost is skewed above reality.
 //-----
 // Base costs are linked to energy via US bread price differences between 2000 and a given introduction year.
 // One loaf in the year 2000 was $1.00 USD on average, while one Pound Sterling was worth $1.65 USD in 2000. One loaf in 2024 was $2.00, while one loaf in 1828 (The earliest standard gauge railway for steam engines) was $0.055 USD (yes, five-and-a-half cents) so that should be taken into account when adjusting the construction and maintenance costs.
 // The exchange rate should be ¤1 loaves = £1 (as an ARBITRARY number) with inflation OFF (as the true scale of calories to money cannot be properly assessed with fluctuating costs)
 // In real life, a watt uses a capital W as its symbol, but here I'm using the symbol for the Ohm. Assume Joules/Watts/Volts/Ohms/Amps are the same thing, because the Amp's definition is dependent on the Ohm (electrical resistance), which has a value dependent on the value of the Volt (electrical potential), which in turn is determined by the Watt (energy per second), which is finally derived from the Joule (energy in SI units). 1 kilocalorie is equal to ¤4184 under this system. Any practical differences between Joules, Watts, Volts and Ohms are mostly irrelevant to this currency system.
 // The system assumes one slice of bread is ~¢100 food calories/kilocalories (1,000 thermal calories = 1 food calorie), that a sandwich meal is 2.5 slices of bread (~¢250 kcal) and 20 slices (~¢2000 kcal) make a loaf, and implies that ¢3300 kilocalories (roughly, 2006 kcal times 1.65 equals 3309.9 to be precise) equals the amount of kilocalories (large calories/U.S. food calories) worth of white bread that could be bought by $1.65 USD in 2000 (equal to ~£1.00 on average at the time). Costs can then be calculated with energy instead of currency. One minimum-price meal (grocery store prices, not restaurant) is equivalent to .15 cents (2.5 slices of bread) in 2000 and thus $0.15 USD was the cost of a sandwich or slice of cake from your fridge in 2000.
 // Unfortunately, making ¢3300 kilocalories = $1 is impossible because the dollar is hardcoded to $2 = £1, and the Pound Sterling value of a currency made using the game settings cannot be fractional. Additionally, even if this discrepancy were to be fixed, this would cause the minimum possible monthly maintenance cost to become 3300 kcal, despite the minimum construction cost being smaller but the intended construction cost being 10 times as much as maintenance. Hopefully this is corrected someday, but it's unlikely so make sure the maintenance cost is as low as possible (the default of 1 is best) and settle for an even more abstracted system as follows...
 // An example of an abstract system was my original "₿" idea for use with TEST; Using the Bitcoin symbol for "breadslices" (1 breadslice = 100 food calories or 100,000 scientific calories) that are a 20th of a loaf of bread. This means that a slice (₿1) is 5 cents in 2000 (the base date for this system), half a cent in 1828 (the first steam locomotive railroads/railways), and 10 cents in 2024 (the year this GRF was made).
 // The minimum maintenance cost of 50 units (£3.02 GBP in non-arbitrary/irl, "£1" in arbitrary/game unit) in maintenance per real minute/game hour per tile being equal to 2.5 loaves of bread (25 slices) is unavoidable, so an even smaller unit must be used. In the future, breadslices could work for a more "user-readable" experience if modifications are made to the handling of costs.
 //===================== Borrowing an idea from Stellaris! ======================
 // The joule/watt/volt/ohm/amp is the intended measurement beyond this point. I will use the "₳" (Austral) symbol to abbreviate Amps. While an amp is not a thing so much as the speed a thing travels at, it can be used as the general measurement of "energy as a currency" and there is in fact an otherwise irrelevant cryptocurrency by the name of "Amps". Set the custom currency to "₳1 Amps = £1" and price vehicles accordingly. Remember, the conversion between Joules and Amps is it takes 4184 joules to equal even 1 food calorie, so there will be a lot of wiggle room and you'll need it.
 // Since U.S. food calories (large calories) are actually kilocalories, and kilocalories are just units of 1,000 scientific/small calories, and small calories are a scientific measurement unit of raw energy, costs can be calculated with the following in mind...
 // 1) Play with game unit speed measurement enabled for both ships and for all other vehicles, which labels the length as "tiles/sec". 1 tile per second is approximately 76 to 77 km/h, exactly 76.8096 game-"km/h" or 112.644 feet p/sec irl if you need to be accurate. You can measure vehicle speeds to double-check this if needed by building a long straight track/road, but the numbers themselves are documented and for now we will use this assumption of 1 tile = 112.644 feet, or ~112.625 feet per tile. Round to 112.5 or 110 if required. The longest straight line on land is ~7000 miles, so a reasonable "long haul" map size would be 262144 by 1024 (~5500 miles long by ~20 miles wide) or even 524288 by 512 (~11,000 miles by 10 miles).
 // 2) Determine the amount of energy needed for an action (1 period of maintenance for one rail tile, or 1 period of maintenance for one vehicle). This can be derived in multiple ways, use information like construction cost (maintenance is ~10% construction per year), the price of white bread at the time the tracktype was introduced (sorry, no cheaper tracks over time in OpenTTD), etc. The same should be done for vehicles meant to use the system. Do not confuse the arbitrary "£1" in the custom currency menu (worth 100 kilocalories, 1 bread slice or 418,400 joules) for any non-arbitrary reality-based £1 costs (worth 3300 kilocalories, 33 bread slices or 13,807,200 joules) you uncover when aiming for realistic pricing.
 // 3) Take the number of scientific calories - which will usually be in the millions at least - and divide it by 1,000. If you're basing it off of food prices instead of vehicle specifications, you can skip the division because food calories are equal to 1000 scientific calories. Now, multiply the calories by 4.184 (or use the handy converter in Windows 10's calculators - or one of the many, many great FOSS conversion tools available for Linux installations - to convert automatically from scientific calories to joules) to get the number of Ω that your tracktype or vehicle costs to build. 
 // 4a) To get the maintenance cost of a railtype, take the number of Ω and divide it by 10. Then add the amount of energy that the railtype provides through electricity (overhead catenary, third rail, etc.) every year. The minimum this can logically be is Ω8640 watts (24 watt hours multiplied by 360 wallclock days) per period.
 // 4b) If creating a vehicle, take the number of people who will be needed for the vehicle's operation, multiply it by 2.5 for the "minimum wage" of one meal per person, and then multiply the minimum wage by the number of hours in a year (180,000) to get the wages. Next, determine daily fuel usage in the exact number of Ω and multiply it by 360 (days). If the vehicle is electric, DO NOT GIVE AN ELECTRIC LOCOMOTIVE A FUEL COST! Finally, add any extra operating costs of the vehicle (derived from irl stats or just made up if the vehicle is fantastical or futuristic in any way) to the total, and you have a suitable properties block.
 // Again, all the above "realism" is entirely optional, feel free to remove or change the values as you find is most fitting of your creation! That said, having a parameter to support the above would be nice! ^_^

	if (((param_axle_weight == 0 && param_realism == 1) && railtype_available("RAIL")) && loading_stage == LOADING_STAGE_RESERVE) {
		//-- Standard Gauge, Future-Proofed Tracks
		// "RAIL"
		item(FEAT_RAILTYPES, railtype_1432mmTO1435mm_infinite_infinite_selfpower) {
			property {
				label:							"RAIL";
				introduction_date:				1825/04/01;
				name:							string(STR_RAILTYPE_NAME_RAIL_2004);
				//toolbar_caption:				string(STR_RAILTYPE_NAME_RAIL_2004);
			//---
				railtype_flags:					bitmask(RAILTYPE_FLAG_DISALLOW_90DEG);
				curve_speed_multiplier:			2.75; // Full top speed on 12 or more tiles of "curve" "radius"
			// 21890 bread loaves (6.62 loaves of bread) per ~75-100 feet for basic rail
				construction_cost:				4; // In units of 16 ₿readslices (1.6 ₿readloaves) per ~75-100 feet per 75 second gamehour period
			// 1326 bread loaves (.662 loaves of bread) per ~75-100 feet per 24 realminute/gamehour period
				maintenance_cost:				1; // In units of 50 ₿readslices (5 ₿readloaves) per ~75-100 feet per 75 second gamehour period
			}
		}
	}
